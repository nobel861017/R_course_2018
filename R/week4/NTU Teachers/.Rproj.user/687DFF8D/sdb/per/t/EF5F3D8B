{
    "collab_server" : "",
    "contents" : "####################################################################\n##\t開發人員: Oliver,Wang\n##    E:mail: bookoob990@gmail.com\n##\t上線日期: 2017/03/13\n####################################################################\n\n#網站開發、管理與使用說明:\n#1. 計算R squared後精確到小數點第6位。R squared相同者，最早交者勝。\n#2. 會先依id merge 原始檔和上傳檔，再進行R squared計算。因此上傳檔id必須準確。\n#3. 不限定上傳檔的檔名。\n#4. 依csv左上角欄位的字串中的數字(column name of column1)判讀隊伍號，所以參賽者上傳的檔案的隊伍號必須準確。\n#5. 同一隊可以重覆上傳檔案，如果上傳分數比以前低不會更新排行榜。\n#6. 網頁檔同目錄下有隊伍資訊檔(teamdata.csv)、原始答案檔(rawdata.csv)、排行榜檔(charts.csv)。\n#7. 未來展望:未來可建構管理員介面，方便更新、更改隊伍資訊檔(teamdata.csv)、原始答案檔(rawdata.csv)、排行榜檔(charts.csv)。若未來有架設資料庫的需求，可以架設SQL或NoSQL資料庫。\n\n####################################################################\nrm(list = ls(all= TRUE))\n\n\n##環境設定\n\n\n##請更改到網站的目錄\n#setwd(\"E:/Google 雲端硬碟/與筆電共用/Kaggle\") \n##設定精確到小數點第6位\noptions(digits = 6)\n##載入所需套件\t\nlibrary(shiny)\nlibrary(dplyr)\nlibrary(tidyr)\n\n##計算R_Squared\nr.square = function(y, fitted.y)\n{\n\t\t\n\tsummary(lm(y~fitted.y))$r.squared\n\t\t\t\t\n}\n##擷取數字\nutfunc = function(data){\n\t\t\t\n\tut = as.numeric(unique(unlist(strsplit(colnames(data)[1], \"[^[:digit:]]\"))))\n\tut = ut[!is.na(ut)]\n\treturn(ut)\n\t\t\t\t\n}\n##調整時間格式問題\nformattime <- function(t){\n\t\t\t\t\t\n\tpaste(as.character(as.POSIXlt(as.numeric(t),origin = \"1970-01-01\")),\"CST\")\n\t\t\t\t\t\n}\n\n##前端\n\n\nui <- fluidPage(\n\n  titlePanel(\"Go,Kaggle-591房東期望房租預測排行榜\"),\n  sidebarLayout(\n    sidebarPanel(\n      fileInput('file1', 'Choose CSV File',\n                accept=c('text/csv', \n\t\t\t\t\t\t 'text/comma-separated-values,text/plain', \n\t\t\t\t\t\t '.csv')),\n      tags$hr()\n    ),\n    mainPanel(\n      tableOutput('contents')\n    )\n  )\n)\n\n\n##後端\n\n\nserver <- function(input,output){\n\t\n\t##讀入主辦單位驗證檔\n\trawdata <- read.csv(\"rawdata.csv\",header=T)\n\t##讀入隊伍名稱資料檔\n\tteamdata <- read.csv(\"teamdata.csv\",header=T)\n\tteamdata$teamnumber <- as.character(round(teamdata$teamnumber))\n\t\n\t##show charts\n\toutput$contents <- renderTable({\n\t\n\t\t##讀入排行榜資料檔\n\t\tcharts <- read.csv(\"charts.csv\",header=T)\n\t\t##讀入隊伍上傳檔\n\t\tinFile <- input$file1\n\t\t\n\t\tif (is.null(inFile)){\n\t\t\n\t\t\t##若沒有上傳檔案，顯示檔案中舊的排行榜\n\t\t\tcharts[,4] = round(charts[,4],6)\n\t\t\tcolnames(charts) <- c(\"排名\",\"隊號\",\"隊名\",\"R squared\",\"上傳時間\")\n\t\t\treturn(charts)\n\t\t\t\n\t\t}\telse\t{\n\n\t\t\n\t\t\t##若有上傳檔案則匯入檔案內容，計算出R square，更新排行榜\n\n\t\t\t\n\t\t\t##匯入資料、整理資料\n\t\t\tuploaddata <- read.csv(inFile$datapath, header=T, sep=\",\")\n\t\t\t##merge驗證檔和上傳檔\n\t\t\tcolnames(uploaddata)[2]<-\"id\"\n\t\t\tnewdata <- merge(rawdata,uploaddata[,2:3],by=\"id\",all.x=T)\n\n\t\t\t##計算R_Squared與建立上傳檔與隊伍的資訊\n\t\t\tuser.teamnumber = as.character(utfunc(uploaddata))\n\t\t\tuser.teamname = teamdata[teamdata$teamnumber==user.teamnumber,2]\n\t\t\tactual = newdata[,2]\n\t\t\tpredict = newdata[,3]\n\t\t\tuser.rs = round(r.square(as.numeric(actual),as.numeric(predict)),6)\n\t\t\tuser.uploadtime = Sys.time()\n\t\t\t\n\t\t\tif (nrow(charts)==0){\n\t\t\t\n\t\t\t\t##若排行榜為空，直接建立新的表\n\t\t\t\tupt=paste(as.character(user.uploadtime),\"CST\")\n\t\t\t\tcharts = data.frame(\"1\",user.teamnumber,user.teamname,user.rs,upt)\n\t\t\t\tcolnames(charts) <- c(\"排名\",\"隊號\",\"隊名\",\"R squared\",\"上傳時間\")\n\t\t\t\twrite.csv(charts,\"charts.csv\",row.names=F)\n\t\t\t\treturn(charts)\n\t\t\t\t\n\t\t\t}\telse\t{\t\n\t\t\t\n\t\t\t\t##若排行榜有資料，則比較舊資訊決定是否進行更新\n\n\t\t\t\tif (sum(as.numeric(charts[,2]==user.teamnumber)) == 0)\n\t\t\t\t{\n\t\t\t\t\n\t\t\t\t\t##若此上傳檔所屬的隊伍未在排行榜內，則新增、重新排序\n\t\t\t\t\tpartofcharts = charts[,2:5]\n\t\t\t\t\tnewrecord = data.frame(user.teamnumber,user.teamname,user.rs,user.uploadtime)\n\t\t\t\t\tcolnames(newrecord) <- colnames(partofcharts)\n\t\t\t\t\tv <- vapply(partofcharts, is.factor, NA)\n\t\t\t\t\tpartofcharts[v] <- lapply(partofcharts[v], as.character)\n\t\t\t\t\tpartofcharts = rbind(partofcharts,newrecord)\n\t\t\t\t\tpartofcharts[nrow(partofcharts),4] <- formattime(partofcharts[nrow(partofcharts),4])\n\t\t\t\t\t\n\t\t\t\t\tif (is.na(partofcharts[nrow(partofcharts),4])){\n\t\t\t\t\t\t\n\t\t\t\t\t\tft=formattime(Sys.time())\n\t\t\t\t\t\tlevels(partofcharts) <- c(levels(charts[,5]),ft)\n\t\t\t\t\t\tpartofcharts[nrow(partofcharts),4]<-ft\n\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcolnames(partofcharts) <- c(\"隊號\",\"隊名\",\"R squared\",\"上傳時間\")\n\t\t\t\t\tcolnames(partofcharts) <- c(\"teamnumber\",\"teamname\",\"rsquared\",\"uploadtime\")\n\t\t\t\t\tpartofcharts[,3] = round(partofcharts[,3],6)\n\t\t\t\t\tcharts = data.frame(rep(1:dim(partofcharts)[1]),arrange(partofcharts,desc(rsquared),uploadtime))\n\t\t\t\t\tcolnames(charts) <- c(\"排名\",\"隊號\",\"隊名\",\"R squared\",\"上傳時間\")\n\t\t\t\t\twrite.csv(charts,\"charts.csv\",row.names=F)\n\t\t\t\t\treturn(charts)\n\t\t\t\t\t\n\t\t\t\t}\telse\t{\n\t\t\t\t\n\t\t\t\t\t##若此上傳檔所屬的隊伍已在排行榜內，則比對R square是否有提高\n\n\t\t\t\t\tif\t(user.rs > charts[charts[,2]==user.teamnumber,4])\n\t\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\t\t\t##R_squared有提高，則更新、重新排序\n\t\t\t\t\t\tcharts[charts[,2]==user.teamnumber,4] <- user.rs\n\t\t\t\t\t\tlevels(charts[,5]) <- c(levels(charts[,5]),formattime(user.uploadtime))\n\t\t\t\t\t\tcharts[charts[,2]==user.teamnumber,5] <- paste(as.character(user.uploadtime),\"CST\")\n\t\t\t\t\t\t##R_squared相同者看誰最早交，最早交者勝\n\t\t\t\t\t\tcolnames(charts) <- c(\"rank\",\"teamnumber\",\"teamname\",\"rsquared\",\"uploadtime\")\n\t\t\t\t\t\tcharts[,4] = round(charts[,4],6)\n\t\t\t\t\t\tcharts = data.frame(rep(1:dim(charts)[1]),arrange(charts[,2:5],desc(rsquared),uploadtime))\n\t\t\t\t\t\tcolnames(charts) <- c(\"排名\",\"隊號\",\"隊名\",\"R squared\",\"上傳時間\")\n\t\t\t\t\t\t##更新排行榜檔案\n\t\t\t\t\t\twrite.csv(charts,\"charts.csv\",row.names=F)\n\t\t\t\t\t\treturn(charts)\n\n\t\t\t\t\t}\telse\t{\n\n\t\t\t\t\t\t##若R_squared沒有提昇或不改變排行榜\n\t\t\t\t\t\tcolnames(charts) <- c(\"排名\",\"隊號\",\"隊名\",\"R squared\",\"上傳時間\")\n\t\t\t\t\t\treturn(charts)\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t##update charts of webpage\n\t\t\tcolnames(charts) <- c(\"排名\",\"隊號\",\"隊名\",\"R squared\",\"上傳時間\")\n\t\t\treturn(charts)\n\t\n\t\t}\n\t})\n}\n\nshinyApp(ui, server)\n",
    "created" : 1489716653499.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "123066092",
    "id" : "EF5F3D8B",
    "lastKnownWriteTime" : 1489716743,
    "last_content_update" : 1489716743928,
    "path" : "C:/Users/pecu6/Desktop/uploadAns.r",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}